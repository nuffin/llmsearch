services:
  llmpa:
    container_name: llmpa-llmpa
    image: llmpa:latest
    ports:
      - "58000:58000"
    environment:
      - FLASK_APP=llmpa
      - FLASK_ENV=development
      - FLASK_RUN_HOST=

  postgres:
    container_name: llmpa-postgres
    # image: postgres:17.0-bookworm
    image: postgres-pgvector:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=llmpadb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - 55432:5432
    restart: always

  pgadmin:
    container_name: llmpa-pgadmin
    image: dpage/pgadmin4:8.12
    environment:
      - PGADMIN_DEFAULT_EMAIL=nuffin@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=123456
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - 55050:80
    restart: always

  elasticsearch:
    container_name: llmpa-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=true # Enable security features
      - ELASTIC_PASSWORD=secret # Set the password for 'elastic' user
      - xpack.security.authc.api_key.enabled=true # Enable API key authentication (optional)
    ports:
      - "59200:9200"
      - "59300:9300"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  localai:
    container_name: llmpa-localai
    image: localai/localai:latest-aio-gpu-nvidia-cuda-12
    ports:
      - "58080:8080"
    volumes:
      - global-local-ai-models:/build/models
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  ollama:
    container_name: llmpa-ollama
    image: ollama:latest
    ports:
      - "51400:51400"
    environment:
      - OLLAMA_HOST=0.0.0.0:51400
    volumes:
      - ollama-models:/root/.ollama/models
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

  # opensearch-node1:
  #   container_name: llmpa-opensearch-node1
  #   image: opensearchproject/opensearch:2.5.0 # You can choose the version you need
  #   environment:
  #     - cluster.name=opensearch-cluster
  #     - node.name=opensearch-node1
  #     - discovery.type=single-node
  #     - bootstrap.memory_lock=true
  #     - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - "DISABLE_SECURITY_PLUGIN=true" # Enable security plugin
  #     - "OPENSEARCH_SECURITY_ADMIN_PASSWORD=secret" # Set admin password
  #     # - "OPENSEARCH_SECURITY_AUTO_USE_EXISTING_KEYSTORE=true"
  #     # - "OPENSEARCH_SECURITY_ALLOW_DEFAULT_SSL_CERTIFICATE=true" # To use self-signed certificates
  #     - "OPENSEARCH_SECURITY_SSL_HTTP_ENABLED=false" # Disable HTTP SSL
  #     - "OPENSEARCH_SECURITY_SSL_TRANSPORT_ENABLED=false" # Disable transport SSL
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - opensearch-data:/usr/share/opensearch/data
  #   ports:
  #     - "59200:9200" # OpenSearch REST API
  #     - "59600:9600" # Performance Analyzer
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9200"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

  # opensearch-dashboards:
  #   container_name: llmpa-opensearch-dashboards
  #   image: opensearchproject/opensearch-dashboards:2.5.0
  #   ports:
  #     - "55601:5601" # OpenSearch Dashboards
  #   environment:
  #     OPENSEARCH_HOSTS: '["http://opensearch-node1:9200"]'
  #     OPENSEARCH_SECURITY_ADMIN_PASSWORD: admin_password # Set the admin password here for dashboards

  etcd:
    container_name: llmpa-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      # - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
      - etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: llmpa-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "59001:9001"
      - "59000:9000"
    volumes:
      # - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
      - minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: llmpa-milvus-standalone
    image: milvusdb/milvus:v2.4.13-gpu-hotfix
    ## for CPU
    # image: milvusdb/milvus:v2.4.13-hotfix
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: llmpa-etcd:2379
      MINIO_ADDRESS: llmpa-minio:9000
    volumes:
      # - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
      - milvus:/var/lib/milvus
    ## for CPU
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "59530:19530"
      - "59091:9091"
    ## for GPU
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: ["gpu"]
              device_ids: ["0"]
    depends_on:
      - "etcd"
      - "minio"
# networks:
#   default:
#     name: llmpa
#     driver: bridge

volumes:
  pgdata:
  pgadmin-data:
  esdata:
    driver: local
  opensearch-data:
  global-local-ai-models:
    external: true
  ollama-models:
  milvus:
  minio:
  etcd:

